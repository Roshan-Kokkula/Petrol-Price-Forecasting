{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":22441,"databundleVersionId":1509434,"sourceType":"competition"}],"dockerImageVersionId":30918,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-28T13:57:22.099185Z","iopub.execute_input":"2025-03-28T13:57:22.099649Z","iopub.status.idle":"2025-03-28T13:57:22.105268Z","shell.execute_reply.started":"2025-03-28T13:57:22.099613Z","shell.execute_reply":"2025-03-28T13:57:22.103660Z"}},"outputs":[],"execution_count":50},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/petrol-price-forecasting/train_data.csv\")\ndf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-28T13:57:22.108362Z","iopub.execute_input":"2025-03-28T13:57:22.108923Z","iopub.status.idle":"2025-03-28T13:57:22.137870Z","shell.execute_reply.started":"2025-03-28T13:57:22.108870Z","shell.execute_reply":"2025-03-28T13:57:22.136582Z"}},"outputs":[{"execution_count":51,"output_type":"execute_result","data":{"text/plain":"        Date  Petrol (USD)\n0   6/9/2003         74.59\n1  6/16/2003         74.47\n2  6/23/2003         74.42\n3  6/30/2003         74.35\n4   7/7/2003         74.28","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Petrol (USD)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6/9/2003</td>\n      <td>74.59</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6/16/2003</td>\n      <td>74.47</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6/23/2003</td>\n      <td>74.42</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6/30/2003</td>\n      <td>74.35</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7/7/2003</td>\n      <td>74.28</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":51},{"cell_type":"code","source":"df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-28T13:57:22.139552Z","iopub.execute_input":"2025-03-28T13:57:22.140034Z","iopub.status.idle":"2025-03-28T13:57:22.153654Z","shell.execute_reply.started":"2025-03-28T13:57:22.139989Z","shell.execute_reply":"2025-03-28T13:57:22.152287Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 813 entries, 0 to 812\nData columns (total 2 columns):\n #   Column        Non-Null Count  Dtype  \n---  ------        --------------  -----  \n 0   Date          813 non-null    object \n 1   Petrol (USD)  811 non-null    float64\ndtypes: float64(1), object(1)\nmemory usage: 12.8+ KB\n","output_type":"stream"}],"execution_count":52},{"cell_type":"code","source":"df['Date'] = pd.to_datetime(df['Date'])\ndf.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-28T13:57:22.156155Z","iopub.execute_input":"2025-03-28T13:57:22.156581Z","iopub.status.idle":"2025-03-28T13:57:22.184523Z","shell.execute_reply.started":"2025-03-28T13:57:22.156540Z","shell.execute_reply":"2025-03-28T13:57:22.183365Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 813 entries, 0 to 812\nData columns (total 2 columns):\n #   Column        Non-Null Count  Dtype         \n---  ------        --------------  -----         \n 0   Date          813 non-null    datetime64[ns]\n 1   Petrol (USD)  811 non-null    float64       \ndtypes: datetime64[ns](1), float64(1)\nmemory usage: 12.8 KB\n","output_type":"stream"}],"execution_count":53},{"cell_type":"code","source":"df.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-28T13:57:22.186164Z","iopub.execute_input":"2025-03-28T13:57:22.186632Z","iopub.status.idle":"2025-03-28T13:57:22.220225Z","shell.execute_reply.started":"2025-03-28T13:57:22.186583Z","shell.execute_reply":"2025-03-28T13:57:22.218774Z"}},"outputs":[{"execution_count":54,"output_type":"execute_result","data":{"text/plain":"                                Date  Petrol (USD)\ncount                            813    811.000000\nmean   2011-03-21 00:12:23.911439104    110.330481\nmin              2003-06-09 00:00:00     74.210000\n25%              2007-04-30 00:00:00     94.525000\n50%              2011-03-21 00:00:00    112.420000\n75%              2015-02-09 00:00:00    128.560000\nmax              2018-12-31 00:00:00    189.510000\nstd                              NaN     19.241182","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Petrol (USD)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>813</td>\n      <td>811.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>2011-03-21 00:12:23.911439104</td>\n      <td>110.330481</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>2003-06-09 00:00:00</td>\n      <td>74.210000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2007-04-30 00:00:00</td>\n      <td>94.525000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>2011-03-21 00:00:00</td>\n      <td>112.420000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2015-02-09 00:00:00</td>\n      <td>128.560000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>2018-12-31 00:00:00</td>\n      <td>189.510000</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>NaN</td>\n      <td>19.241182</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":54},{"cell_type":"code","source":"null_values = df.isnull().sum()\nnull_values","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-28T13:57:22.221382Z","iopub.execute_input":"2025-03-28T13:57:22.221824Z","iopub.status.idle":"2025-03-28T13:57:22.242359Z","shell.execute_reply.started":"2025-03-28T13:57:22.221772Z","shell.execute_reply":"2025-03-28T13:57:22.240673Z"}},"outputs":[{"execution_count":55,"output_type":"execute_result","data":{"text/plain":"Date            0\nPetrol (USD)    2\ndtype: int64"},"metadata":{}}],"execution_count":55},{"cell_type":"code","source":"df.dropna(inplace = True)\ndf.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-28T13:57:22.243755Z","iopub.execute_input":"2025-03-28T13:57:22.244292Z","iopub.status.idle":"2025-03-28T13:57:22.273684Z","shell.execute_reply.started":"2025-03-28T13:57:22.244233Z","shell.execute_reply":"2025-03-28T13:57:22.272551Z"}},"outputs":[{"execution_count":56,"output_type":"execute_result","data":{"text/plain":"Date            0\nPetrol (USD)    0\ndtype: int64"},"metadata":{}}],"execution_count":56},{"cell_type":"code","source":"df['Year'] = df['Date'].dt.year\ndf['Year'].unique()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-28T13:59:04.594307Z","iopub.execute_input":"2025-03-28T13:59:04.594776Z","iopub.status.idle":"2025-03-28T13:59:04.603727Z","shell.execute_reply.started":"2025-03-28T13:59:04.594744Z","shell.execute_reply":"2025-03-28T13:59:04.602527Z"}},"outputs":[{"execution_count":61,"output_type":"execute_result","data":{"text/plain":"array([2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,\n       2014, 2015, 2016, 2017, 2018], dtype=int32)"},"metadata":{}}],"execution_count":61},{"cell_type":"code","source":"max_date = df['Year'].max()\nmin_date = df['Year'].min()\nmax_price = df['Petrol (USD)'].max()\nmin_price = df['Petrol (USD)'].min()\nprint(f'The Dataset contains data from Date {min_date} to {max_date}')\nprint(f'The price Range between for the above data is {min_price} to {max_price} ')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-28T13:59:32.798378Z","iopub.execute_input":"2025-03-28T13:59:32.798810Z","iopub.status.idle":"2025-03-28T13:59:32.806572Z","shell.execute_reply.started":"2025-03-28T13:59:32.798768Z","shell.execute_reply":"2025-03-28T13:59:32.805598Z"}},"outputs":[{"name":"stdout","text":"The Dataset contains data from Date 2003 to 2018\nThe price Range between for the above data is 74.21 to 189.51 \n","output_type":"stream"}],"execution_count":62},{"cell_type":"code","source":"plt.plot(df['Year'],df['Petrol (USD)'],marker = 'o',color = 'b')\nplt.title(\"Price trend over Years\")\nplt.xlabel(\"Price\")\nplt.ylabel(\"Price (USD)\")\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-28T13:57:22.317854Z","iopub.execute_input":"2025-03-28T13:57:22.318298Z","iopub.status.idle":"2025-03-28T13:57:22.559595Z","shell.execute_reply.started":"2025-03-28T13:57:22.318259Z","shell.execute_reply":"2025-03-28T13:57:22.558313Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":59}]}